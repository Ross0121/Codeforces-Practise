#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll, ll> pll;
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define fl(i,a,b) for (ll i = a; i < b; i++)
#define rfl(i,a,b) for (ll i= a; i > b; i--)
#define fastio                      \
  ios_base::sync_with_stdio(false); \
  cin.tie(NULL);                    \
  cout.tie(NULL);

void show(vector<ll> v)
{
  for (auto x : v)
    cout << x << " ";
  cout << endl;
}
void seeout(int a[], ll n)
{
  // int sumt = 0;
  fl(i, 0, n)
  {
    cout << a[i] << " ";
    // sumt += a[i];
  }
  cout << endl;
  // cout << sumt;
}


int f(int n)
{
  // single line to find factorial
  return (n == 1 || n == 0) ? 1 : n * f(n - 1);
}









int main()
{
  fastio;
  string m, d;
  cin >> m >> d;
  ll pl = 0, mi = 0, q = 0;
  fl(i, 0, m.length())
  {
    if (m[i] == '+')pl++;
    else mi++;
  }
  fl(i, 0, d.length())
  {
    if (d[i] == '+')pl--;
    else if (d[i] == '-')mi--;
    else q++;
  }
  if (mi < 0 || pl < 0)
  {
    double a = 0;
    cout << fixed;
    cout << setprecision(10);
    cout << a;
  }
  else if (q == 0)
  {
    double a = 1;
    cout << fixed;
    cout << setprecision(10);
    cout << a;
  }
  else
  {
    double a = (f(q) / (f(mi) * f(pl))) / pow(2, q);
    cout << fixed;
    cout << setprecision(10);
    cout << a;
  }

}


